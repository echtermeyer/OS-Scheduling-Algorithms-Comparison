
@article{paivio_dual_1991,
	title = {Dual coding theory: Retrospect and current status},
	volume = {45},
	issn = {0008-4255},
	doi = {10.1037/h0084295},
	shorttitle = {Dual coding theory},
	abstract = {Reviews literature on the dual coding theory ({DCT}) of memory and cognition, beginning with the origin and development of {DCT} from 1963 to 1986. General and specific criticisms of {DCT} and research findings are also addressed, focusing on alternative views that emphasize abstract propositional representations as the basis of cognition. The review deals with the origins of {DCT} in research related to the conceptual peg hypothesis of concreteness and imagery effects on associative memory. The review also discusses empirical and conceptual responses to recent criticisms of {DCT} and alternative theoretical views in areas related to concreteness effects on memory, schema theory, and conceptual issues in the philosophy of science. (French abstract) ({PsycInfo} Database Record (c) 2022 {APA}, all rights reserved)},
	pages = {255--287},
	number = {3},
	journaltitle = {Canadian Journal of Psychology / Revue canadienne de psychologie},
	author = {Paivio, Allan},
	date = {1991},
	note = {Place: Canada
Publisher: Canadian Psychological Association},
	keywords = {Cognition, Human Information Storage, Literature Review, Memory, Theories},
	file = {Snapshot:/Users/ericechtermeyer/Zotero/storage/EV6P32YQ/1992-07881-001.html:text/html},
}

@incollection{sweller_cognitive_2011,
	title = {Cognitive Load Theory},
	volume = {55},
	url = {https://www.sciencedirect.com/science/article/pii/B9780123876911000028},
	abstract = {Cognitive load theory uses evolutionary theory to consider human cognitive architecture and uses that architecture to devise novel, instructional procedures. The theory assumes that knowledge can be divided into biologically primary knowledge that we have evolved to acquire and biologically secondary knowledge that is important for cultural reasons. Secondary knowledge, unlike primary knowledge, is the subject of instruction. It is processed in a manner that is analogous to the manner in which biological evolution processes information. When dealing with secondary knowledge, human cognition requires a very large information store, the contents of which are acquired largely by obtaining information from other information stores. Novel information is generated by a random generate and test procedure with only very limited amounts of novel information able to be processed at any given time. In contrast, very large amounts of organized information stored in the information store can be processed in order to generate complex action. This architecture has been used to generate instructional procedures, summarized in this chapter.},
	pages = {37--76},
	booktitle = {Psychology of Learning and Motivation},
	publisher = {Academic Press},
	author = {Sweller, John},
	editor = {Mestre, Jose P. and Ross, Brian H.},
	urldate = {2024-01-03},
	date = {2011-01-01},
	doi = {10.1016/B978-0-12-387691-1.00002-8},
	keywords = {Evolutionary Psychology, Human Cognitive Architecture, Instructional Processes, Long-term Memory, Working Memory},
	file = {ScienceDirect Snapshot:/Users/ericechtermeyer/Zotero/storage/87Q3K92V/B9780123876911000028.html:text/html},
}

@incollection{mayer_multimedia_2002,
	title = {Multimedia learning},
	volume = {41},
	url = {https://www.sciencedirect.com/science/article/pii/S0079742102800056},
	abstract = {This chapter discusses the multimedia learning. Multimedia learning occurs when a learner builds a mental representation from words and pictures that have been presented. For purposes of research program, multimedia instructional messages are presentations of material using words and pictures that are intended to foster learning. The pictures can be static graphics such as photos, drawings, maps, charts, figures, and tables or dynamic graphics such as video or animation. Multimedia learning occurs if one constructs a mental representation of the lightning system based on the words and pictures in the multimedia instructional message. In this case, one must build a cause-and-effect model of how a change in one part of the system causes a principle-based change in another part, and so on. For example, when cool air comes over a warm surface, the cool air becomes heated and rises.},
	pages = {85--139},
	booktitle = {Psychology of Learning and Motivation},
	publisher = {Academic Press},
	author = {Mayer, Richard E.},
	urldate = {2024-01-03},
	date = {2002-01-01},
	doi = {10.1016/S0079-7421(02)80005-6},
	file = {Full Text:/Users/ericechtermeyer/Zotero/storage/59IM37LR/Mayer - 2002 - Multimedia learning.pdf:application/pdf;ScienceDirect Snapshot:/Users/ericechtermeyer/Zotero/storage/ZUGSNCT4/S0079742102800056.html:text/html},
}

@article{ballard_art_1964,
	title = {The Art of Color by Johannes Itten},
	volume = {22},
	issn = {0021-8529},
	url = {https://doi.org/10.2307/427243},
	doi = {10.2307/427243},
	pages = {344},
	number = {3},
	journaltitle = {The Journal of Aesthetics and Art Criticism},
	shortjournal = {The Journal of Aesthetics and Art Criticism},
	author = {Ballard, Louise},
	urldate = {2024-01-03},
	date = {1964-03-01},
	file = {Snapshot:/Users/ericechtermeyer/Zotero/storage/CZEYZW7X/6335147.html:text/html},
}

@article{wertheimer_untersuchungen_2017,
	title = {Untersuchungen zur Lehre von der Gestalt},
	volume = {39},
	doi = {10.1515/gth-2017-0007},
	journaltitle = {Gestalt Theory},
	shortjournal = {Gestalt Theory},
	author = {Wertheimer, Max},
	date = {2017-03-01},
	file = {Full Text:/Users/ericechtermeyer/Zotero/storage/PGFR4QT6/Wertheimer - 2017 - Untersuchungen zur Lehre von der Gestalt.pdf:application/pdf},
}

@misc{goel_comparative_2013,
	title = {A Comparative Study of {CPU} Scheduling Algorithms},
	url = {http://arxiv.org/abs/1307.4165},
	doi = {10.48550/arXiv.1307.4165},
	abstract = {Developing {CPU} scheduling algorithms and understanding their impact in practice can be difficult and time consuming due to the need to modify and test operating system kernel code and measure the resulting performance on a consistent workload of real applications. As processor is the important resource, {CPU} scheduling becomes very important in accomplishing the operating system ({OS}) design goals. The intention should be allowed as many as possible running processes at all time in order to make best use of {CPU}. This paper presents a state diagram that depicts the comparative study of various scheduling algorithms for a single {CPU} and shows which algorithm is best for the particular situation. Using this representation, it becomes much easier to understand what is going on inside the system and why a different set of processes is a candidate for the allocation of the {CPU} at different time. The objective of the study is to analyze the high efficient {CPU} scheduler on design of the high quality scheduling algorithms which suits the scheduling goals. Key Words:-Scheduler, State Diagrams, {CPU}-Scheduling, Performance},
	number = {{arXiv}:1307.4165},
	publisher = {{arXiv}},
	author = {Goel, Neetu and Garg, R. B.},
	urldate = {2024-01-10},
	date = {2013-07-16},
	eprinttype = {arxiv},
	eprint = {1307.4165 [cs]},
	keywords = {Computer Science - Operating Systems},
	file = {arXiv Fulltext PDF:/Users/ericechtermeyer/Zotero/storage/8X5WR2L3/Goel and Garg - 2013 - A Comparative Study of CPU Scheduling Algorithms.pdf:application/pdf;arXiv.org Snapshot:/Users/ericechtermeyer/Zotero/storage/AYPPMMDL/1307.html:text/html},
}

@inproceedings{pemasinghe_comparison_2022,
	title = {Comparison of {CPU} Scheduling Algorithms: {FCFS}, {SJF}, {SRTF}, Round Robin, Priority Based, and Multilevel Queuing},
	url = {https://ieeexplore.ieee.org/abstract/document/9929533},
	doi = {10.1109/R10-HTC54060.2022.9929533},
	shorttitle = {Comparison of {CPU} Scheduling Algorithms},
	abstract = {In this article, we are discussing various aspects of {CPU} scheduling. We first introduce the concept of {CPU} scheduling, different types of schedulers and the typical terminology used in relation to processes. Scheduling criteria, the optimization of which is the ultimate goal of a {CPU} scheduling algorithm, are also discussed. We then discuss various types of research studies that have been carried out with respect to {CPU} scheduling algorithms. Different {CPU} scheduling algorithms are examined with examples to highlight their characteristics. Advantages and disadvantages of each of these algorithms are also explored. The scheduling algorithms discussed are, first come first served, shortest job first, shortest remaining time first, priority based, round robin, multilevel queue, and multilevel feedback queue.},
	eventtitle = {2022 {IEEE} 10th Region 10 Humanitarian Technology Conference (R10-{HTC})},
	pages = {318--323},
	booktitle = {2022 {IEEE} 10th Region 10 Humanitarian Technology Conference (R10-{HTC})},
	author = {Pemasinghe, Sajeewa and Rajapaksha, Samantha},
	urldate = {2024-01-10},
	date = {2022-09},
	note = {{ISSN}: 2572-7621},
	file = {IEEE Xplore Abstract Record:/Users/ericechtermeyer/Zotero/storage/NSCHQI4Y/9929533.html:text/html;IEEE Xplore Full Text PDF:/Users/ericechtermeyer/Zotero/storage/6TAT5RPQ/Pemasinghe and Rajapaksha - 2022 - Comparison of CPU Scheduling Algorithms FCFS, SJF.pdf:application/pdf},
}

@inproceedings{thombare_efficient_2016,
	title = {Efficient implementation of Multilevel Feedback Queue Scheduling},
	url = {https://ieeexplore.ieee.org/abstract/document/7566483},
	doi = {10.1109/WiSPNET.2016.7566483},
	abstract = {In {CPU} scheduling various algorithms exist like {FCFS} (First come first serve), {SJF} (Shortest job first), {SRTF} (Shortest remaining time first), Priority Scheduling, Round Robin ({RR}), {MLQ} (Multilevel queue), {MLFQ} (Multilevel feedback queue) scheduling. Multilevel Feedback Queue ({MLFQ}) algorithm allows the switching of processes between queues depending on their burst time. The processes switch to the next queue when burst time is greater than time quantum. Each queue can define its own scheduling policy. In this paper we have implemented {MLFQ} technique using small burst time for the first queue thus making it analogous to {RR} scheduling and using {SJF} prior to {RR} from second queue onwards gives better {CPU} utilization. Dynamic time quantum is also used which further improves the efficiency of the scheduling. Here the dynamic time quantum of the queues is calculated based on the burst time of the processes. Time quantum of the second queue is the burst time of the (2n/3)th process (where n is the number of processes remaining after the execution in the first queue) and time quantum of the third queue is burst time of the largest remaining process. Thus 66\% of the processes get executed in the second queue and remaining processes in the last queue thus preventing the problem of starvation of huge burst time processes.},
	eventtitle = {2016 International Conference on Wireless Communications, Signal Processing and Networking ({WiSPNET})},
	pages = {1950--1954},
	booktitle = {2016 International Conference on Wireless Communications, Signal Processing and Networking ({WiSPNET})},
	author = {Thombare, Malhar and Sukhwani, Rajiv and Shah, Priyam and Chaudhari, Sheetal and Raundale, Pooja},
	urldate = {2024-01-10},
	date = {2016-03},
	file = {IEEE Xplore Abstract Record:/Users/ericechtermeyer/Zotero/storage/3JKFM2DL/7566483.html:text/html;IEEE Xplore Full Text PDF:/Users/ericechtermeyer/Zotero/storage/2QKK2T7K/Thombare et al. - 2016 - Efficient implementation of Multilevel Feedback Qu.pdf:application/pdf},
}

@article{haldar_fairness_1991,
	title = {Fairness in processor scheduling in time sharing systems},
	volume = {25},
	issn = {0163-5980},
	url = {https://dl.acm.org/doi/10.1145/122140.122141},
	doi = {10.1145/122140.122141},
	abstract = {Loosely, fairness is the assurance of granting each request, from a set of requests, within a predetermined bounded time even though the request scheduling primitives are unfair or random. The fairness property has been studied, in solutions to the mutual exclusion problem, from theoretical point of view. Many fair solutions to the mutual exclusion problem have been proposed in recent years. This paper presents one illustration to show how the concepts of fairness could be incorporated in processor scheduling in time sharing systems. First, it looks at some shortcomings associated with the round robin scheduler used in the time sharing systems, and then presents a fair version of the round robin scheduler.},
	pages = {4--18},
	number = {1},
	journaltitle = {{ACM} {SIGOPS} Operating Systems Review},
	shortjournal = {{SIGOPS} Oper. Syst. Rev.},
	author = {Haldar, S. and Subramanian, D. K.},
	urldate = {2024-01-10},
	date = {1991-01-02},
	file = {Full Text PDF:/Users/ericechtermeyer/Zotero/storage/VZZ547AN/Haldar and Subramanian - 1991 - Fairness in processor scheduling in time sharing s.pdf:application/pdf},
}


% This file was created with Citavi 6.12.0.0

@book{Silberschatz.2019,
 author = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
 year = {2019},
 title = {Operating system concepts},
 keywords = {Betriebssystem;C;Entwurf;Java},
 address = {Hoboken, NJ},
 edition = {Global edition, [Tenth edition]},
 publisher = {Wiley},
 isbn = {9781119454083}
}


